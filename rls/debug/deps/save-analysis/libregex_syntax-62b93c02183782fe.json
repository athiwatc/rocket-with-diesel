{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"regex_syntax","disambiguator":[1493916008601741442,11019432295717060217]},"crate_root":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src","external_crates":[{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4020923302338226816,9291188497828199729]}},{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11563862960073976802,13844641865847531534]}},{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6101055335753657056,10307719465121417899]}},{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[13133924824137222729,13404668485096109174]}},{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[1490233928882894248,14879263219562574058]}},{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2209655654339879057,13634825834824034602]}},{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4232262400531963741,13803261123069970360]}},{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[7938393604286454591,4749584763814996159]}},{"file_name":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[2434005001608296417,5441582833208938526]}}],"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":69595,"line_start":11,"line_end":2043,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2409,"byte_end":2417,"line_start":91,"line_end":91,"column_start":20,"column_end":28},"name":"Literals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2419,"byte_end":2422,"line_start":91,"line_end":91,"column_start":30,"column_end":33},"name":"Lit","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":69595,"line_start":11,"line_end":2043,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/athiwatchunlakhan/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":172},{"krate":0,"index":390},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":808},{"krate":0,"index":1144},{"krate":0,"index":1160},{"krate":0,"index":1156},{"krate":0,"index":1150},{"krate":0,"index":1146},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":1164},{"krate":0,"index":1182},{"krate":0,"index":1180},{"krate":0,"index":1176},{"krate":0,"index":1170},{"krate":0,"index":1166},{"krate":0,"index":818},{"krate":0,"index":1186},{"krate":0,"index":1202},{"krate":0,"index":1198},{"krate":0,"index":1192},{"krate":0,"index":1188},{"krate":0,"index":1206},{"krate":0,"index":1240},{"krate":0,"index":1238},{"krate":0,"index":1234},{"krate":0,"index":1228},{"krate":0,"index":1216},{"krate":0,"index":1212},{"krate":0,"index":1208},{"krate":0,"index":1244},{"krate":0,"index":1260},{"krate":0,"index":1256},{"krate":0,"index":1250},{"krate":0,"index":1246},{"krate":0,"index":1264},{"krate":0,"index":1298},{"krate":0,"index":1296},{"krate":0,"index":1292},{"krate":0,"index":1286},{"krate":0,"index":1274},{"krate":0,"index":1270},{"krate":0,"index":1266},{"krate":0,"index":1302},{"krate":0,"index":1308},{"krate":0,"index":1304},{"krate":0,"index":824},{"krate":0,"index":846},{"krate":0,"index":872},{"krate":0,"index":878},{"krate":0,"index":886},{"krate":0,"index":894},{"krate":0,"index":918},{"krate":0,"index":934},{"krate":0,"index":938},{"krate":0,"index":942},{"krate":0,"index":946},{"krate":0,"index":950},{"krate":0,"index":970},{"krate":0,"index":982},{"krate":0,"index":988},{"krate":0,"index":996},{"krate":0,"index":1004},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1016},{"krate":0,"index":1020},{"krate":0,"index":1024},{"krate":0,"index":1028},{"krate":0,"index":1032},{"krate":0,"index":1036},{"krate":0,"index":1040},{"krate":0,"index":1044},{"krate":0,"index":1312},{"krate":0,"index":1324},{"krate":0,"index":1320},{"krate":0,"index":1314},{"krate":0,"index":1328},{"krate":0,"index":1340},{"krate":0,"index":1336},{"krate":0,"index":1330},{"krate":0,"index":1046},{"krate":0,"index":1052},{"krate":0,"index":1058},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088}],"decl_id":null,"docs":"This crate provides a regular expression parser and an abstract syntax for\nregular expressions. The abstract syntax is defined by the `Expr` type. The\nconcrete syntax is enumerated in the\n[`regex`](../regex/index.html#syntax)\ncrate documentation.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1927,"byte_end":1949,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":71114,"byte_end":71122,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"Literals","qualname":"::literals::Literals","value":"Literals {  }","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171}],"decl_id":null,"docs":" A set of literal byte strings extracted from a regular expression.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":71103,"byte_end":71193,"line_start":34,"line_end":38,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":71432,"byte_end":71435,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"Lit","qualname":"::literals::Lit","value":"Lit {  }","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":175}],"decl_id":null,"docs":" A single member of a set of literals extracted from a regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":71565,"byte_end":71570,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"empty","qualname":"<Literals>::empty","value":"fn () -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a new empty set of literals using default limits.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":71781,"byte_end":71791,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"limit_size","qualname":"<Literals>::limit_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the approximate size limit (in bytes) of this set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":72176,"byte_end":72190,"line_start":72,"line_end":72,"column_start":12,"column_end":26},"name":"set_limit_size","qualname":"<Literals>::set_limit_size","value":"fn (&mut self, size: usize) -> &mut Literals","parent":null,"children":[],"decl_id":null,"docs":" Set the approximate size limit (in bytes) of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":72354,"byte_end":72365,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"limit_class","qualname":"<Literals>::limit_class","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the character class size limit for this set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":72919,"byte_end":72934,"line_start":92,"line_end":92,"column_start":12,"column_end":27},"name":"set_limit_class","qualname":"<Literals>::set_limit_class","value":"fn (&mut self, size: usize) -> &mut Literals","parent":null,"children":[],"decl_id":null,"docs":" Limits the size of character(or byte) classes considered.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":73116,"byte_end":73124,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"literals","qualname":"<Literals>::literals","value":"fn (&self) -> &[Lit]","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of literals as a slice. Its order is unspecified.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":73299,"byte_end":73306,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"min_len","qualname":"<Literals>::min_len","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the smallest literal.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":73671,"byte_end":73683,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"all_complete","qualname":"<Literals>::all_complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members in this set are complete.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":73850,"byte_end":73862,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"any_complete","qualname":"<Literals>::any_complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if any member in this set is complete.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":74008,"byte_end":74022,"line_start":128,"line_end":128,"column_start":12,"column_end":26},"name":"contains_empty","qualname":"<Literals>::contains_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set contains an empty literal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":74186,"byte_end":74194,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Literals>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set is empty or if all of its members is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":74374,"byte_end":74382,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"to_empty","qualname":"<Literals>::to_empty","value":"fn (&self) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a new empty set of literals using this set's limits.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":74640,"byte_end":74661,"line_start":146,"line_end":146,"column_start":12,"column_end":33},"name":"longest_common_prefix","qualname":"<Literals>::longest_common_prefix","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest common prefix of all members in this set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":75161,"byte_end":75182,"line_start":164,"line_end":164,"column_start":12,"column_end":33},"name":"longest_common_suffix","qualname":"<Literals>::longest_common_suffix","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest common suffix of all members in this set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":75997,"byte_end":76008,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"trim_suffix","qualname":"<Literals>::trim_suffix","value":"fn (&self, num_bytes: usize) -> Option<Literals>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new set of literals with the given number of bytes trimmed\n from the suffix of each literal.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":76905,"byte_end":76925,"line_start":215,"line_end":215,"column_start":12,"column_end":32},"name":"unambiguous_prefixes","qualname":"<Literals>::unambiguous_prefixes","value":"fn (&self) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a new set of prefixes of this set of literals that are\n guaranteed to be unambiguous.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":79494,"byte_end":79514,"line_start":283,"line_end":283,"column_start":12,"column_end":32},"name":"unambiguous_suffixes","qualname":"<Literals>::unambiguous_suffixes","value":"fn (&self) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a new set of suffixes of this set of literals that are\n guaranteed to be unambiguous.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":80205,"byte_end":80219,"line_start":301,"line_end":301,"column_start":12,"column_end":26},"name":"union_prefixes","qualname":"<Literals>::union_prefixes","value":"fn (&mut self, expr: &Expr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unions the prefixes from the given expression to this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":80877,"byte_end":80891,"line_start":316,"line_end":316,"column_start":12,"column_end":26},"name":"union_suffixes","qualname":"<Literals>::union_suffixes","value":"fn (&mut self, expr: &Expr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unions the suffixes from the given expression to this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":81342,"byte_end":81347,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"union","qualname":"<Literals>::union","value":"fn (&mut self, lits: Literals) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unions this set with another set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":81979,"byte_end":81992,"line_start":347,"line_end":347,"column_start":12,"column_end":25},"name":"cross_product","qualname":"<Literals>::cross_product","value":"fn (&mut self, lits: &Literals) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extends this set with another set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":83722,"byte_end":83731,"line_start":396,"line_end":396,"column_start":12,"column_end":21},"name":"cross_add","qualname":"<Literals>::cross_add","value":"fn (&mut self, bytes: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extends each literal in this set with the bytes given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":84974,"byte_end":84977,"line_start":433,"line_end":433,"column_start":12,"column_end":15},"name":"add","qualname":"<Literals>::add","value":"fn (&mut self, lit: Lit) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds the given literal to this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":85311,"byte_end":85325,"line_start":444,"line_end":444,"column_start":12,"column_end":26},"name":"add_char_class","qualname":"<Literals>::add_char_class","value":"fn (&mut self, cls: &CharClass) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extends each literal in this set with the character class given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":86683,"byte_end":86697,"line_start":485,"line_end":485,"column_start":12,"column_end":26},"name":"add_byte_class","qualname":"<Literals>::add_byte_class","value":"fn (&mut self, cls: &ByteClass) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extends each literal in this set with the byte class given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":87372,"byte_end":87375,"line_start":507,"line_end":507,"column_start":12,"column_end":15},"name":"cut","qualname":"<Literals>::cut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Cuts every member of this set. When a member is cut, it can never\n be extended.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":87515,"byte_end":87522,"line_start":514,"line_end":514,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Literals>::reverse","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reverses all members in place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":87667,"byte_end":87672,"line_start":521,"line_end":521,"column_start":12,"column_end":17},"name":"clear","qualname":"<Literals>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears this set of all members.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98530,"byte_end":98533,"line_start":868,"line_end":868,"column_start":12,"column_end":15},"name":"new","qualname":"<Lit>::new","value":"fn (bytes: Vec<u8>) -> Lit","parent":null,"children":[],"decl_id":null,"docs":" Returns a new complete literal with the bytes given.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98660,"byte_end":98665,"line_start":873,"line_end":873,"column_start":12,"column_end":17},"name":"empty","qualname":"<Lit>::empty","value":"fn () -> Lit","parent":null,"children":[],"decl_id":null,"docs":" Returns a new complete empty literal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98781,"byte_end":98787,"line_start":878,"line_end":878,"column_start":12,"column_end":18},"name":"is_cut","qualname":"<Lit>::is_cut","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this literal was \"cut.\"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98867,"byte_end":98870,"line_start":883,"line_end":883,"column_start":12,"column_end":15},"name":"cut","qualname":"<Lit>::cut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Cuts this literal.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2661,"byte_end":2666,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Empty","qualname":"::Expr::Empty","value":"Expr::Empty","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" An empty regex (which never matches any text).\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":227},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2740,"byte_end":2747,"line_start":101,"line_end":101,"column_start":5,"column_end":12},"name":"Literal","qualname":"::Expr::Literal","value":"Expr::Literal { chars, casei }","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" A sequence of one or more literal characters to be matched.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":233},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2948,"byte_end":2960,"line_start":108,"line_end":108,"column_start":5,"column_end":17},"name":"LiteralBytes","qualname":"::Expr::LiteralBytes","value":"Expr::LiteralBytes { bytes, casei }","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" A sequence of one or more literal bytes to be matched.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":239},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3391,"byte_end":3398,"line_start":120,"line_end":120,"column_start":5,"column_end":12},"name":"AnyChar","qualname":"::Expr::AnyChar","value":"Expr::AnyChar","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match any character.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3461,"byte_end":3472,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"AnyCharNoNL","qualname":"::Expr::AnyCharNoNL","value":"Expr::AnyCharNoNL","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match any character, excluding new line (`0xA`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3502,"byte_end":3509,"line_start":124,"line_end":124,"column_start":5,"column_end":12},"name":"AnyByte","qualname":"::Expr::AnyByte","value":"Expr::AnyByte","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match any byte.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3567,"byte_end":3578,"line_start":126,"line_end":126,"column_start":5,"column_end":16},"name":"AnyByteNoNL","qualname":"::Expr::AnyByteNoNL","value":"Expr::AnyByteNoNL","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match any byte, excluding new line (`0xA`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":247},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3611,"byte_end":3616,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Class","qualname":"::Expr::Class","value":"Expr::Class(CharClass)","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" A character class.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":251},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3682,"byte_end":3692,"line_start":130,"line_end":130,"column_start":5,"column_end":15},"name":"ClassBytes","qualname":"::Expr::ClassBytes","value":"Expr::ClassBytes(ByteClass)","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" A character class with byte ranges only.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3766,"byte_end":3775,"line_start":132,"line_end":132,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::Expr::StartLine","value":"Expr::StartLine","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match the start of a line or beginning of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3830,"byte_end":3837,"line_start":134,"line_end":134,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::Expr::EndLine","value":"Expr::EndLine","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match the end of a line or end of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":259},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3881,"byte_end":3890,"line_start":136,"line_end":136,"column_start":5,"column_end":14},"name":"StartText","qualname":"::Expr::StartText","value":"Expr::StartText","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match the beginning of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3928,"byte_end":3935,"line_start":138,"line_end":138,"column_start":5,"column_end":12},"name":"EndText","qualname":"::Expr::EndText","value":"Expr::EndText","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match the end of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4047,"byte_end":4059,"line_start":141,"line_end":141,"column_start":5,"column_end":17},"name":"WordBoundary","qualname":"::Expr::WordBoundary","value":"Expr::WordBoundary","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match a word boundary (word character on one side and a non-word\n character on the other).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":265},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4171,"byte_end":4186,"line_start":144,"line_end":144,"column_start":5,"column_end":20},"name":"NotWordBoundary","qualname":"::Expr::NotWordBoundary","value":"Expr::NotWordBoundary","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match a position that is not a word boundary (word or non-word\n characters on both sides).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4230,"byte_end":4247,"line_start":146,"line_end":146,"column_start":5,"column_end":22},"name":"WordBoundaryAscii","qualname":"::Expr::WordBoundaryAscii","value":"Expr::WordBoundaryAscii","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match an ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4314,"byte_end":4334,"line_start":148,"line_end":148,"column_start":5,"column_end":25},"name":"NotWordBoundaryAscii","qualname":"::Expr::NotWordBoundaryAscii","value":"Expr::NotWordBoundaryAscii","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Match a position that is not an ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":271},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4381,"byte_end":4386,"line_start":150,"line_end":150,"column_start":5,"column_end":10},"name":"Group","qualname":"::Expr::Group","value":"Expr::Group { e, i, name }","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" A group, possibly non-capturing.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":279},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4715,"byte_end":4721,"line_start":159,"line_end":159,"column_start":5,"column_end":11},"name":"Repeat","qualname":"::Expr::Repeat","value":"Expr::Repeat { e, r, greedy }","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" A repeat operator (`?`, `*`, `+` or `{m,n}`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5256,"byte_end":5262,"line_start":173,"line_end":173,"column_start":5,"column_end":11},"name":"Concat","qualname":"::Expr::Concat","value":"Expr::Concat(Vec<Expr>)","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" A concatenation of expressions. Must be matched one after the other.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":291},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5467,"byte_end":5476,"line_start":178,"line_end":178,"column_start":5,"column_end":14},"name":"Alternate","qualname":"::Expr::Alternate","value":"Expr::Alternate(Vec<Expr>)","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" An alternation of expressions. Only one must match.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1144},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2595,"byte_end":2599,"line_start":97,"line_end":97,"column_start":10,"column_end":14},"name":"Expr","qualname":"::Expr","value":"Expr::{Empty, Literal, LiteralBytes, AnyChar, AnyCharNoNL, AnyByte, AnyByteNoNL, Class, ClassBytes, StartLine, EndLine, StartText, EndText, WordBoundary, NotWordBoundary, WordBoundaryAscii, NotWordBoundaryAscii, Group, Repeat, Concat, Alternate}","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":233},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":279},{"krate":0,"index":287},{"krate":0,"index":291}],"decl_id":null,"docs":" A regular expression abstract syntax tree.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2586,"byte_end":5490,"line_start":97,"line_end":179,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":295},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5712,"byte_end":5721,"line_start":189,"line_end":189,"column_start":5,"column_end":14},"name":"ZeroOrOne","qualname":"::Repeater::ZeroOrOne","value":"Repeater::ZeroOrOne","parent":{"krate":0,"index":1164},"children":[],"decl_id":null,"docs":" Match zero or one (`?`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5761,"byte_end":5771,"line_start":191,"line_end":191,"column_start":5,"column_end":15},"name":"ZeroOrMore","qualname":"::Repeater::ZeroOrMore","value":"Repeater::ZeroOrMore","parent":{"krate":0,"index":1164},"children":[],"decl_id":null,"docs":" Match zero or more (`*`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":299},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5810,"byte_end":5819,"line_start":193,"line_end":193,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::Repeater::OneOrMore","value":"Repeater::OneOrMore","parent":{"krate":0,"index":1164},"children":[],"decl_id":null,"docs":" Match one or more (`+`).\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":301},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5975,"byte_end":5980,"line_start":197,"line_end":197,"column_start":5,"column_end":10},"name":"Range","qualname":"::Repeater::Range","value":"Repeater::Range { min, max }","parent":{"krate":0,"index":1164},"children":[],"decl_id":null,"docs":" Match for at least `min` and at most `max` (`{m,n}`).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1164},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5664,"byte_end":5672,"line_start":187,"line_end":187,"column_start":10,"column_end":18},"name":"Repeater","qualname":"::Repeater","value":"Repeater::{ZeroOrOne, ZeroOrMore, OneOrMore, Range}","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301}],"decl_id":null,"docs":" The type of a repeat operator expression.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5655,"byte_end":6144,"line_start":187,"line_end":203,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5655,"byte_end":6144,"line_start":187,"line_end":203,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1186},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7501,"byte_end":7510,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"CharClass","qualname":"::CharClass","value":"CharClass {  }","parent":null,"children":[{"krate":0,"index":307}],"decl_id":null,"docs":" A character class.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7490,"byte_end":7543,"line_start":239,"line_end":241,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8036,"byte_end":8046,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"ClassRange","qualname":"::ClassRange","value":"ClassRange { start, end }","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":311}],"decl_id":null,"docs":" A single inclusive range in a character class.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8025,"byte_end":8294,"line_start":252,"line_end":262,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8025,"byte_end":8294,"line_start":252,"line_end":262,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":309},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8157,"byte_end":8162,"line_start":256,"line_end":256,"column_start":9,"column_end":14},"name":"start","qualname":"::ClassRange::start","value":"char","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The start character of the range.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":311},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8282,"byte_end":8285,"line_start":261,"line_end":261,"column_start":9,"column_end":12},"name":"end","qualname":"::ClassRange::end","value":"char","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The end character of the range.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9270,"byte_end":9279,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"ByteClass","qualname":"::ByteClass","value":"ByteClass {  }","parent":null,"children":[{"krate":0,"index":313}],"decl_id":null,"docs":" A byte class for byte ranges only.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9259,"byte_end":9311,"line_start":284,"line_end":286,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1264},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9580,"byte_end":9589,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"ByteRange","qualname":"::ByteRange","value":"ByteRange { start, end }","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":317}],"decl_id":null,"docs":" A single inclusive range in a byte class.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9569,"byte_end":9821,"line_start":293,"line_end":303,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9569,"byte_end":9821,"line_start":293,"line_end":303,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":315},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9695,"byte_end":9700,"line_start":297,"line_end":297,"column_start":9,"column_end":14},"name":"start","qualname":"::ByteRange::start","value":"u8","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" The start byte of the range.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":317},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9811,"byte_end":9814,"line_start":302,"line_end":302,"column_start":9,"column_end":12},"name":"end","qualname":"::ByteRange::end","value":"u8","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" The end byte of the range.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1302},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10030,"byte_end":10041,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"ExprBuilder","qualname":"::ExprBuilder","value":"ExprBuilder {  }","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":321}],"decl_id":null,"docs":" A builder for configuring regular expression parsing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10244,"byte_end":10247,"line_start":319,"line_end":319,"column_start":12,"column_end":15},"name":"new","qualname":"<ExprBuilder>::new","value":"fn () -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder for configuring expression parsing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10450,"byte_end":10466,"line_start":327,"line_end":327,"column_start":12,"column_end":28},"name":"case_insensitive","qualname":"<ExprBuilder>::case_insensitive","value":"fn (mut self, yes: bool) -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the default value for the case insensitive (`i`) flag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10638,"byte_end":10648,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"multi_line","qualname":"<ExprBuilder>::multi_line","value":"fn (mut self, yes: bool) -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the default value for the multi-line matching (`m`) flag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10814,"byte_end":10834,"line_start":339,"line_end":339,"column_start":12,"column_end":32},"name":"dot_matches_new_line","qualname":"<ExprBuilder>::dot_matches_new_line","value":"fn (mut self, yes: bool) -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the default value for the any character (`s`) flag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10998,"byte_end":11008,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"swap_greed","qualname":"<ExprBuilder>::swap_greed","value":"fn (mut self, yes: bool) -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the default value for the greedy swap (`U`) flag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11183,"byte_end":11200,"line_start":351,"line_end":351,"column_start":12,"column_end":29},"name":"ignore_whitespace","qualname":"<ExprBuilder>::ignore_whitespace","value":"fn (mut self, yes: bool) -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the default value for the ignore whitespace (`x`) flag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11437,"byte_end":11444,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"unicode","qualname":"<ExprBuilder>::unicode","value":"fn (mut self, yes: bool) -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the default value for the Unicode (`u`) flag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12390,"byte_end":12401,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"allow_bytes","qualname":"<ExprBuilder>::allow_bytes","value":"fn (mut self, yes: bool) -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether the parser allows matching arbitrary bytes or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12687,"byte_end":12697,"line_start":389,"line_end":389,"column_start":12,"column_end":22},"name":"nest_limit","qualname":"<ExprBuilder>::nest_limit","value":"fn (mut self, limit: usize) -> ExprBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the nesting limit for regular expression parsing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12883,"byte_end":12888,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"parse","qualname":"<ExprBuilder>::parse","value":"fn (self, s: &str) -> Result<Expr>","parent":null,"children":[],"decl_id":null,"docs":" Parse a string as a regular expression using the current configuraiton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13313,"byte_end":13318,"line_start":406,"line_end":406,"column_start":12,"column_end":17},"name":"parse","qualname":"<Expr>::parse","value":"fn (s: &str) -> Result<Expr>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string in a regular expression syntax tree.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17081,"byte_end":17089,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"prefixes","qualname":"<Expr>::prefixes","value":"fn (&self) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of literal prefixes extracted from this expression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17293,"byte_end":17301,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"suffixes","qualname":"<Expr>::suffixes","value":"fn (&self) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of literal suffixes extracted from this expression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17539,"byte_end":17556,"line_start":518,"line_end":518,"column_start":12,"column_end":29},"name":"is_anchored_start","qualname":"<Expr>::is_anchored_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the expression is required to match from\n the beginning of text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18124,"byte_end":18142,"line_start":533,"line_end":533,"column_start":12,"column_end":30},"name":"has_anchored_start","qualname":"<Expr>::has_anchored_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the expression has at least one matchable\n sub-expression that must match the beginning of text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18678,"byte_end":18693,"line_start":548,"line_end":548,"column_start":12,"column_end":27},"name":"is_anchored_end","qualname":"<Expr>::is_anchored_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the expression is required to match at the\n end of the text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19262,"byte_end":19278,"line_start":563,"line_end":563,"column_start":12,"column_end":28},"name":"has_anchored_end","qualname":"<Expr>::has_anchored_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the expression has at least one matchable\n sub-expression that must match the beginning of text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19827,"byte_end":19836,"line_start":578,"line_end":578,"column_start":12,"column_end":21},"name":"has_bytes","qualname":"<Expr>::has_bytes","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the expression contains sub-expressions\n that can match arbitrary bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20926,"byte_end":20929,"line_start":612,"line_end":612,"column_start":12,"column_end":15},"name":"new","qualname":"<CharClass>::new","value":"fn (ranges: Vec<ClassRange>) -> CharClass","parent":null,"children":[],"decl_id":null,"docs":" Create a new class from an existing set of ranges.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21192,"byte_end":21199,"line_start":622,"line_end":622,"column_start":12,"column_end":19},"name":"matches","qualname":"<CharClass>::matches","value":"fn (&self, c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `c` is matched by this character class.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21460,"byte_end":21466,"line_start":629,"line_end":629,"column_start":12,"column_end":18},"name":"remove","qualname":"<CharClass>::remove","value":"fn (&mut self, c: char) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the given character from the class if it exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24198,"byte_end":24204,"line_start":710,"line_end":710,"column_start":12,"column_end":18},"name":"negate","qualname":"<CharClass>::negate","value":"fn (mut self) -> CharClass","parent":null,"children":[],"decl_id":null,"docs":" Negates the character class.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25443,"byte_end":25452,"line_start":741,"line_end":741,"column_start":12,"column_end":21},"name":"case_fold","qualname":"<CharClass>::case_fold","value":"fn (self) -> CharClass","parent":null,"children":[],"decl_id":null,"docs":" Apply case folding to this character class.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30790,"byte_end":30793,"line_start":906,"line_end":906,"column_start":12,"column_end":15},"name":"new","qualname":"<ByteClass>::new","value":"fn (ranges: Vec<ByteRange>) -> ByteClass","parent":null,"children":[],"decl_id":null,"docs":" Create a new class from an existing set of ranges.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30947,"byte_end":30954,"line_start":911,"line_end":911,"column_start":12,"column_end":19},"name":"matches","qualname":"<ByteClass>::matches","value":"fn (&self, b: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `b` is matched by this byte class.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31208,"byte_end":31214,"line_start":918,"line_end":918,"column_start":12,"column_end":18},"name":"remove","qualname":"<ByteClass>::remove","value":"fn (&mut self, b: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the given byte from the class if it exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33439,"byte_end":33445,"line_start":982,"line_end":982,"column_start":12,"column_end":18},"name":"negate","qualname":"<ByteClass>::negate","value":"fn (mut self) -> ByteClass","parent":null,"children":[],"decl_id":null,"docs":" Negates the byte class.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":34773,"byte_end":34782,"line_start":1015,"line_end":1015,"column_start":12,"column_end":21},"name":"case_fold","qualname":"<ByteClass>::case_fold","value":"fn (self) -> ByteClass","parent":null,"children":[],"decl_id":null,"docs":" Apply case folding to this byte class.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1044},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":43783,"byte_end":43789,"line_start":1296,"line_end":1296,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for computations that can return a `Error`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1312},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44009,"byte_end":44014,"line_start":1303,"line_end":1303,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327}],"decl_id":null,"docs":" A parse error.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44275,"byte_end":44293,"line_start":1314,"line_end":1314,"column_start":5,"column_end":23},"name":"DoubleFlagNegation","qualname":"::ErrorKind::DoubleFlagNegation","value":"ErrorKind::DoubleFlagNegation","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A negation symbol is used twice in flag settings.\n e.g., `(?-i-s)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44388,"byte_end":44408,"line_start":1317,"line_end":1317,"column_start":5,"column_end":25},"name":"DuplicateCaptureName","qualname":"::ErrorKind::DuplicateCaptureName","value":"ErrorKind::DuplicateCaptureName(String)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" The same capture name was used more than once.\n e.g., `(?P<a>.)(?P<a>.)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44467,"byte_end":44481,"line_start":1319,"line_end":1319,"column_start":5,"column_end":19},"name":"EmptyAlternate","qualname":"::ErrorKind::EmptyAlternate","value":"ErrorKind::EmptyAlternate","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An alternate is empty. e.g., `(|a)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44543,"byte_end":44559,"line_start":1321,"line_end":1321,"column_start":5,"column_end":21},"name":"EmptyCaptureName","qualname":"::ErrorKind::EmptyCaptureName","value":"ErrorKind::EmptyCaptureName","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A capture group name is empty. e.g., `(?P<>a)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44637,"byte_end":44654,"line_start":1323,"line_end":1323,"column_start":5,"column_end":22},"name":"EmptyFlagNegation","qualname":"::ErrorKind::EmptyFlagNegation","value":"ErrorKind::EmptyFlagNegation","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A negation symbol was not proceded by any flags. e.g., `(?i-)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44698,"byte_end":44708,"line_start":1325,"line_end":1325,"column_start":5,"column_end":15},"name":"EmptyGroup","qualname":"::ErrorKind::EmptyGroup","value":"ErrorKind::EmptyGroup","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A group is empty. e.g., `()`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":343},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44788,"byte_end":44801,"line_start":1327,"line_end":1327,"column_start":5,"column_end":18},"name":"InvalidBase10","qualname":"::ErrorKind::InvalidBase10","value":"ErrorKind::InvalidBase10(String)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An invalid number was used in a counted repetition. e.g., `a{b}`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":347},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44907,"byte_end":44920,"line_start":1330,"line_end":1330,"column_start":5,"column_end":18},"name":"InvalidBase16","qualname":"::ErrorKind::InvalidBase16","value":"ErrorKind::InvalidBase16(String)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An invalid hexadecimal number was used in an escape sequence.\n e.g., `\\xAG`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":351},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44995,"byte_end":45013,"line_start":1332,"line_end":1332,"column_start":5,"column_end":23},"name":"InvalidCaptureName","qualname":"::ErrorKind::InvalidCaptureName","value":"ErrorKind::InvalidCaptureName(String)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An invalid capture name was used. e.g., `(?P<0a>b)`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":355},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45160,"byte_end":45177,"line_start":1335,"line_end":1335,"column_start":5,"column_end":22},"name":"InvalidClassRange","qualname":"::ErrorKind::InvalidClassRange","value":"ErrorKind::InvalidClassRange { start, end }","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An invalid class range was givien. Specifically, when the start of the\n range is greater than the end. e.g., `[z-a]`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":361},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45461,"byte_end":45479,"line_start":1343,"line_end":1343,"column_start":5,"column_end":23},"name":"InvalidClassEscape","qualname":"::ErrorKind::InvalidClassEscape","value":"ErrorKind::InvalidClassEscape(Expr)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An escape sequence was used in a character class where it is not\n allowed. e.g., `[a-\\pN]` or `[\\A]`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":365},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45564,"byte_end":45582,"line_start":1345,"line_end":1345,"column_start":5,"column_end":23},"name":"InvalidRepeatRange","qualname":"::ErrorKind::InvalidRepeatRange","value":"ErrorKind::InvalidRepeatRange { min, max }","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An invalid counted repetition min/max was given. e.g., `a{2,1}`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":371},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45856,"byte_end":45874,"line_start":1353,"line_end":1353,"column_start":5,"column_end":23},"name":"InvalidScalarValue","qualname":"::ErrorKind::InvalidScalarValue","value":"ErrorKind::InvalidScalarValue(u32)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An invalid Unicode scalar value was used in a long hexadecimal\n sequence. e.g., `\\x{D800}`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":375},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45944,"byte_end":45957,"line_start":1355,"line_end":1355,"column_start":5,"column_end":18},"name":"MissingBase10","qualname":"::ErrorKind::MissingBase10","value":"ErrorKind::MissingBase10","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An empty counted repetition operator. e.g., `a{}`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":377},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46038,"byte_end":46057,"line_start":1357,"line_end":1357,"column_start":5,"column_end":24},"name":"RepeaterExpectsExpr","qualname":"::ErrorKind::RepeaterExpectsExpr","value":"ErrorKind::RepeaterExpectsExpr","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A repetition operator was not applied to an expression. e.g., `*`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46177,"byte_end":46199,"line_start":1360,"line_end":1360,"column_start":5,"column_end":27},"name":"RepeaterUnexpectedExpr","qualname":"::ErrorKind::RepeaterUnexpectedExpr","value":"ErrorKind::RepeaterUnexpectedExpr(Expr)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A repetition operator was applied to an expression that cannot be\n repeated. e.g., `a+*` or `a|*`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46277,"byte_end":46296,"line_start":1362,"line_end":1362,"column_start":5,"column_end":24},"name":"UnclosedCaptureName","qualname":"::ErrorKind::UnclosedCaptureName","value":"ErrorKind::UnclosedCaptureName(String)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A capture group name that is never closed. e.g., `(?P<a`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":387},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46365,"byte_end":46376,"line_start":1364,"line_end":1364,"column_start":5,"column_end":16},"name":"UnclosedHex","qualname":"::ErrorKind::UnclosedHex","value":"ErrorKind::UnclosedHex","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An unclosed hexadecimal literal. e.g., `\\x{a`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":389},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46427,"byte_end":46440,"line_start":1366,"line_end":1366,"column_start":5,"column_end":18},"name":"UnclosedParen","qualname":"::ErrorKind::UnclosedParen","value":"ErrorKind::UnclosedParen","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An unclosed parenthesis. e.g., `(a`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":391},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46508,"byte_end":46522,"line_start":1368,"line_end":1368,"column_start":5,"column_end":19},"name":"UnclosedRepeat","qualname":"::ErrorKind::UnclosedRepeat","value":"ErrorKind::UnclosedRepeat","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An unclosed counted repetition operator. e.g., `a{2`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":393},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46584,"byte_end":46603,"line_start":1370,"line_end":1370,"column_start":5,"column_end":24},"name":"UnclosedUnicodeName","qualname":"::ErrorKind::UnclosedUnicodeName","value":"ErrorKind::UnclosedUnicodeName","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" An unclosed named Unicode class. e.g., `\\p{Yi`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":395},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46671,"byte_end":46689,"line_start":1372,"line_end":1372,"column_start":5,"column_end":23},"name":"UnexpectedClassEof","qualname":"::ErrorKind::UnexpectedClassEof","value":"ErrorKind::UnexpectedClassEof","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Saw end of regex before class was closed. e.g., `[a`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":397},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46766,"byte_end":46785,"line_start":1374,"line_end":1374,"column_start":5,"column_end":24},"name":"UnexpectedEscapeEof","qualname":"::ErrorKind::UnexpectedEscapeEof","value":"ErrorKind::UnexpectedEscapeEof","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Saw end of regex before escape sequence was closed. e.g., `\\`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46855,"byte_end":46872,"line_start":1376,"line_end":1376,"column_start":5,"column_end":22},"name":"UnexpectedFlagEof","qualname":"::ErrorKind::UnexpectedFlagEof","value":"ErrorKind::UnexpectedFlagEof","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Saw end of regex before flags were closed. e.g., `(?i`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":401},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46957,"byte_end":46981,"line_start":1378,"line_end":1378,"column_start":5,"column_end":29},"name":"UnexpectedTwoDigitHexEof","qualname":"::ErrorKind::UnexpectedTwoDigitHexEof","value":"ErrorKind::UnexpectedTwoDigitHexEof","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":403},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47028,"byte_end":47041,"line_start":1380,"line_end":1380,"column_start":5,"column_end":18},"name":"UnopenedParen","qualname":"::ErrorKind::UnopenedParen","value":"ErrorKind::UnopenedParen","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Unopened parenthesis. e.g., `)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":405},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47097,"byte_end":47115,"line_start":1382,"line_end":1382,"column_start":5,"column_end":23},"name":"UnrecognizedEscape","qualname":"::ErrorKind::UnrecognizedEscape","value":"ErrorKind::UnrecognizedEscape(char)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Unrecognized escape sequence. e.g., `\\q`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":409},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47168,"byte_end":47184,"line_start":1384,"line_end":1384,"column_start":5,"column_end":21},"name":"UnrecognizedFlag","qualname":"::ErrorKind::UnrecognizedFlag","value":"ErrorKind::UnrecognizedFlag(char)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Unrecognized flag. e.g., `(?a)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":413},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47255,"byte_end":47279,"line_start":1386,"line_end":1386,"column_start":5,"column_end":29},"name":"UnrecognizedUnicodeClass","qualname":"::ErrorKind::UnrecognizedUnicodeClass","value":"ErrorKind::UnrecognizedUnicodeClass(String)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Unrecognized named Unicode class. e.g., `\\p{Foo}`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47584,"byte_end":47598,"line_start":1392,"line_end":1392,"column_start":5,"column_end":19},"name":"StackExhausted","qualname":"::ErrorKind::StackExhausted","value":"ErrorKind::StackExhausted","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Indicates that the regex uses too much nesting.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47653,"byte_end":47667,"line_start":1394,"line_end":1394,"column_start":5,"column_end":19},"name":"FlagNotAllowed","qualname":"::ErrorKind::FlagNotAllowed","value":"ErrorKind::FlagNotAllowed(char)","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A disallowed flag was found (e.g., `u`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":423},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47754,"byte_end":47771,"line_start":1396,"line_end":1396,"column_start":5,"column_end":22},"name":"UnicodeNotAllowed","qualname":"::ErrorKind::UnicodeNotAllowed","value":"ErrorKind::UnicodeNotAllowed","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A Unicode class was used when the Unicode (`u`) flag was disabled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":425},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47966,"byte_end":47977,"line_start":1400,"line_end":1400,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::ErrorKind::InvalidUtf8","value":"ErrorKind::InvalidUtf8","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" InvalidUtf8 indicates that the expression may match non-UTF-8 bytes.\n This never returned if the parser is permitted to allow expressions\n that match arbitrary bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48073,"byte_end":48083,"line_start":1403,"line_end":1403,"column_start":5,"column_end":15},"name":"EmptyClass","qualname":"::ErrorKind::EmptyClass","value":"ErrorKind::EmptyClass","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" A character class was constructed such that it is empty.\n e.g., `[^\\d\\D]`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48363,"byte_end":48378,"line_start":1410,"line_end":1410,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ErrorKind::__Nonexhaustive","value":"ErrorKind::__Nonexhaustive","parent":{"krate":0,"index":1328},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1328},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44176,"byte_end":44185,"line_start":1311,"line_end":1311,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::ErrorKind","value":"ErrorKind::{DoubleFlagNegation, DuplicateCaptureName, EmptyAlternate, EmptyCaptureName, EmptyFlagNegation, EmptyGroup, InvalidBase10, InvalidBase16, InvalidCaptureName, InvalidClassRange, InvalidClassEscape, InvalidRepeatRange, InvalidScalarValue, MissingBase10, RepeaterExpectsExpr, RepeaterUnexpectedExpr, UnclosedCaptureName, UnclosedHex, UnclosedParen, UnclosedRepeat, UnclosedUnicodeName, UnexpectedClassEof, UnexpectedEscapeEof, UnexpectedFlagEof, UnexpectedTwoDigitHexEof, UnopenedParen, UnrecognizedEscape, UnrecognizedFlag, UnrecognizedUnicodeClass, StackExhausted, FlagNotAllowed, UnicodeNotAllowed, InvalidUtf8, EmptyClass, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":361},{"krate":0,"index":365},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429}],"decl_id":null,"docs":" The specific type of parse error that can occur.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48671,"byte_end":48679,"line_start":1419,"line_end":1419,"column_start":12,"column_end":20},"name":"position","qualname":"<Error>::position","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns an approximate *character* offset at which the error occurred.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48784,"byte_end":48788,"line_start":1424,"line_end":1424,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn (&self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the regex parse error.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1076},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":57836,"byte_end":57841,"line_start":1622,"line_end":1622,"column_start":8,"column_end":13},"name":"quote","qualname":"::quote","value":"fn (text: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escapes all regular expression meta characters in `text`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1086},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58892,"byte_end":58904,"line_start":1669,"line_end":1669,"column_start":8,"column_end":20},"name":"is_word_char","qualname":"::is_word_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if `c` is a word character.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":59390,"byte_end":59402,"line_start":1686,"line_end":1686,"column_start":8,"column_end":20},"name":"is_word_byte","qualname":"::is_word_byte","value":"fn (b: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if `c` is an ASCII word byte.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":71477,"byte_end":71485,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98180,"byte_end":98188,"line_start":856,"line_end":856,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98452,"byte_end":98455,"line_start":866,"line_end":866,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98937,"byte_end":98940,"line_start":888,"line_end":888,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99038,"byte_end":99041,"line_start":894,"line_end":894,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99176,"byte_end":99179,"line_start":900,"line_end":900,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99446,"byte_end":99449,"line_start":910,"line_end":910,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99517,"byte_end":99520,"line_start":914,"line_end":914,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99620,"byte_end":99623,"line_start":919,"line_end":919,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":125163,"byte_end":125168,"line_start":58,"line_end":58,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":125971,"byte_end":125977,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":151075,"byte_end":151081,"line_start":775,"line_end":775,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":155068,"byte_end":155073,"line_start":908,"line_end":908,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":156114,"byte_end":156119,"line_start":941,"line_end":941,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":156618,"byte_end":156624,"line_start":965,"line_end":965,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":163465,"byte_end":163470,"line_start":1127,"line_end":1127,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":164483,"byte_end":164484,"line_start":1168,"line_end":1168,"column_start":43,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6151,"byte_end":6159,"line_start":205,"line_end":205,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10093,"byte_end":10104,"line_start":315,"line_end":315,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13015,"byte_end":13019,"line_start":400,"line_end":400,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20344,"byte_end":20353,"line_start":593,"line_end":593,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20473,"byte_end":20482,"line_start":598,"line_end":598,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20844,"byte_end":20853,"line_start":610,"line_end":610,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":914},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26244,"byte_end":26254,"line_start":765,"line_end":765,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29954,"byte_end":29964,"line_start":870,"line_end":870,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30239,"byte_end":30249,"line_start":884,"line_end":884,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30708,"byte_end":30717,"line_start":904,"line_end":904,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":966},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35226,"byte_end":35235,"line_start":1032,"line_end":1032,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37276,"byte_end":37285,"line_start":1089,"line_end":1089,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37403,"byte_end":37412,"line_start":1094,"line_end":1094,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37786,"byte_end":37795,"line_start":1106,"line_end":1106,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38062,"byte_end":38071,"line_start":1120,"line_end":1120,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38682,"byte_end":38686,"line_start":1142,"line_end":1142,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41387,"byte_end":41395,"line_start":1216,"line_end":1216,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41869,"byte_end":41878,"line_start":1229,"line_end":1229,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42655,"byte_end":42665,"line_start":1256,"line_end":1256,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42831,"byte_end":42840,"line_start":1262,"line_end":1262,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":43564,"byte_end":43573,"line_start":1289,"line_end":1289,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48388,"byte_end":48393,"line_start":1413,"line_end":1413,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48845,"byte_end":48854,"line_start":1429,"line_end":1429,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51225,"byte_end":51230,"line_start":1472,"line_end":1472,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51332,"byte_end":51337,"line_start":1478,"line_end":1478,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51723,"byte_end":51732,"line_start":1490,"line_end":1490,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":71477,"byte_end":71485,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98180,"byte_end":98188,"line_start":856,"line_end":856,"column_start":21,"column_end":29},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98452,"byte_end":98455,"line_start":866,"line_end":866,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":98937,"byte_end":98940,"line_start":888,"line_end":888,"column_start":20,"column_end":23},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99038,"byte_end":99041,"line_start":894,"line_end":894,"column_start":21,"column_end":24},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2472}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99176,"byte_end":99179,"line_start":900,"line_end":900,"column_start":21,"column_end":24},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99446,"byte_end":99449,"line_start":910,"line_end":910,"column_start":22,"column_end":25},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99517,"byte_end":99520,"line_start":914,"line_end":914,"column_start":21,"column_end":24},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":99620,"byte_end":99623,"line_start":919,"line_end":919,"column_start":24,"column_end":27},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":2030}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":125163,"byte_end":125168,"line_start":58,"line_end":58,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":1126},"to":{"krate":2,"index":2640}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":125971,"byte_end":125977,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":151075,"byte_end":151081,"line_start":775,"line_end":775,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":155068,"byte_end":155073,"line_start":908,"line_end":908,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":296},"to":{"krate":2,"index":3842}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":156114,"byte_end":156119,"line_start":941,"line_end":941,"column_start":10,"column_end":15},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":156618,"byte_end":156624,"line_start":965,"line_end":965,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":163465,"byte_end":163470,"line_start":1127,"line_end":1127,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,112,97,114,115,101,114,46,114,115],"byte_start":164483,"byte_end":164484,"line_start":1168,"line_end":1168,"column_start":43,"column_end":44},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":101},"to":{"krate":0,"index":326}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6151,"byte_end":6159,"line_start":205,"line_end":205,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10093,"byte_end":10104,"line_start":315,"line_end":315,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13015,"byte_end":13019,"line_start":400,"line_end":400,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20344,"byte_end":20353,"line_start":593,"line_end":593,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":1186},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20473,"byte_end":20482,"line_start":598,"line_end":598,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":1186},"to":{"krate":2,"index":4232}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20844,"byte_end":20853,"line_start":610,"line_end":610,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":1186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26244,"byte_end":26254,"line_start":765,"line_end":765,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29954,"byte_end":29964,"line_start":870,"line_end":870,"column_start":26,"column_end":36},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":1206},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30239,"byte_end":30249,"line_start":884,"line_end":884,"column_start":27,"column_end":37},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1206},"to":{"krate":2,"index":2472}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30708,"byte_end":30717,"line_start":904,"line_end":904,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35226,"byte_end":35235,"line_start":1032,"line_end":1032,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37276,"byte_end":37285,"line_start":1089,"line_end":1089,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2012}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37403,"byte_end":37412,"line_start":1094,"line_end":1094,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":4232}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37786,"byte_end":37795,"line_start":1106,"line_end":1106,"column_start":24,"column_end":33},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38062,"byte_end":38071,"line_start":1120,"line_end":1120,"column_start":25,"column_end":34},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":2472}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38682,"byte_end":38686,"line_start":1142,"line_end":1142,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41387,"byte_end":41395,"line_start":1216,"line_end":1216,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1164},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41869,"byte_end":41878,"line_start":1229,"line_end":1229,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":1186},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42655,"byte_end":42665,"line_start":1256,"line_end":1256,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":1206},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42831,"byte_end":42840,"line_start":1262,"line_end":1262,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":43564,"byte_end":43573,"line_start":1289,"line_end":1289,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48388,"byte_end":48393,"line_start":1413,"line_end":1413,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48845,"byte_end":48854,"line_start":1429,"line_end":1429,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51225,"byte_end":51230,"line_start":1472,"line_end":1472,"column_start":30,"column_end":35},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":2388}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51332,"byte_end":51337,"line_start":1478,"line_end":1478,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1312},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,85,115,101,114,115,47,97,116,104,105,119,97,116,99,104,117,110,108,97,107,104,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,115,121,110,116,97,120,45,48,46,51,46,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51723,"byte_end":51732,"line_start":1490,"line_end":1490,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1328},"to":{"krate":2,"index":7720}}]}